version: '3.8'

services:
  # PostgreSQL 資料庫
  postgres:
    image: postgres:15-alpine
    container_name: morningai-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-morningai}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: ${POSTGRES_DB:-morningai_dev}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - morningai-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-morningai}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI 後端服務
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: morningai-backend
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-morningai}:${POSTGRES_PASSWORD:-changeme}@postgres:5432/${POSTGRES_DB:-morningai_dev}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      - ENVIRONMENT=${ENVIRONMENT:-development}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
    networks:
      - morningai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # React 前端服務
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: morningai-frontend
    environment:
      - VITE_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - morningai-network
    restart: unless-stopped

  # Agent Hub (預留給未來階段)
  agent-hub:
    build:
      context: ./agent-hub
      dockerfile: Dockerfile
    container_name: morningai-agent-hub
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-morningai}:${POSTGRES_PASSWORD:-changeme}@postgres:5432/${POSTGRES_DB:-morningai_dev}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    ports:
      - "8001:8001"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./agent-hub:/app
    networks:
      - morningai-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  morningai-network:
    driver: bridge

